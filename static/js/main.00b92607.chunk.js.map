{"version":3,"sources":["components/Navbar.js","components/TextBox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","home","onClick","toggleMode","role","htmlFor","TextBox","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","spText","split","join","length","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00b92607.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n            </li> */}\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n          <div className={`form-check form-switch mx-4 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextBox(props) {\r\n\r\n    // const [myStyle, setmyStyle] = useState( {\r\n    //     backgroungcolor:'white'\r\n    // })\r\n\r\n    // toggleStyle = ()=>{\r\n    //     if(myStyle.backgroungcolor==='white'){\r\n    //         setmyStyle({\r\n    //             backgroungcolor:'black'\r\n    //         })\r\n    //     }else{\r\n    //         setmyStyle({\r\n    //             backgroungcolor:'white'\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\",\"success\")\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\",\"success\")\r\n\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        let text = document.getElementById(\"FormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\",\"success\")\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let spText = text.split(/[ ]+/)\r\n        setText(spText.join(\" \"))\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            {/* style={myStyle} */}\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 > {props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"FormControlTextarea1\" rows=\"7\" style={{ backgroundColor: props.mode === 'dark' ? '#343a40' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>Convert to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleExtraSpaces}>Clear Extra Spaces</button>\r\n\r\n                {/* <button className=\"btn btn-dark mx-3\" onClick={toggleStyle}>Dark Mode</button> */}\r\n                {/* <button type='button' className=\"btn btn-dark\" onClick={toggleStyle}>Dark</button> */}\r\n            </div>\r\n            <div className='container my-4' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>\r\n                    Text Summary\r\n                </h1>\r\n                <p>{text.split(\" \").length} words and {text.length} letters</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextBox from './components/TextBox';\nimport Alert from './components/Alert'\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n\n   \n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#212529';\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\")\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" home=\"Home\"  mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className='container'>\n        <TextBox heading=\"Enter Text To Analyse\" mode={mode} showAlert={showAlert} />\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}